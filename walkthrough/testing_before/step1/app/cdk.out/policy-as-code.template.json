{
 "Resources": {
  "BucketKey7E4AEAB8": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Created by policy-as-code/Bucket",
    "Tags": [
     {
      "Key": "App",
      "Value": "policy-as-code"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "policy-as-code/Bucket/Key/Resource"
   }
  },
  "Bucket83908E77": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "BucketKeyEnabled": true,
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "BucketKey7E4AEAB8",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 5
       },
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 180
       },
       "NoncurrentVersionTransitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 31
        }
       ],
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 60
        }
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "policy-as-code"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "policy-as-code/Bucket/Resource"
   }
  },
  "AwsConfigRuleS37A32F907": {
   "Type": "AWS::Config::ConfigRule",
   "Properties": {
    "Source": {
     "Owner": "AWS",
     "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED"
    },
    "ConfigRuleName": "S3PublicAccessSettings",
    "Description": "Checks that your Amazon S3 buckets do not allow public read access. The rule checks the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).",
    "MaximumExecutionFrequency": "One_Hour",
    "Scope": {
     "ComplianceResourceId": {
      "Ref": "Bucket83908E77"
     },
     "ComplianceResourceTypes": [
      "AWS::S3::Bucket"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "policy-as-code/AwsConfigRuleS3/Resource"
   }
  },
  "AutomationAssumeRoleAC6E73A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::FindInMap": [
          "ServiceprincipalMap",
          {
           "Ref": "AWS::Region"
          },
          "ssm"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole"
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "s3:*",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "Bucket83908E77",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3FullAccess"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "policy-as-code/AutomationAssumeRole/Resource"
   }
  },
  "AwsConfigRemdiationS3": {
   "Type": "AWS::Config::RemediationConfiguration",
   "Properties": {
    "ConfigRuleName": {
     "Ref": "AwsConfigRuleS37A32F907"
    },
    "TargetId": "AWS-DisableS3BucketPublicReadWrite",
    "TargetType": "SSM_DOCUMENT",
    "Automatic": true,
    "MaximumAutomaticAttempts": 3,
    "Parameters": {
     "AutomationAssumeRole": {
      "StaticValue": {
       "Values": [
        {
         "Fn::GetAtt": [
          "AutomationAssumeRoleAC6E73A7",
          "Arn"
         ]
        }
       ]
      }
     },
     "S3BucketName": {
      "ResourceValue": {
       "Value": "RESOURCE_ID"
      }
     }
    },
    "RetryAttemptSeconds": 60
   },
   "Metadata": {
    "aws:cdk:path": "policy-as-code/AwsConfigRemdiationS3"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/0WNSw7CMAxEz8I+uFQFwRLBElVC4QRR6hZT6lT5CFVR7k4/VKyeZ8Ye55Af97DbnNXHbXXVZlEbixAfXulWSHQmWI3iath5G7QX15r/bs1jUJEnw5MoVd8TN0lMZdEVEC9BtzgfLVMSbecg3nCYvBFJaMM1NRBLxarBSob3Wjzaq5LYYUVqerQEwc4iCVIdRGl+ayNTSuI++KfhrIAT5IfNyxFtbWBPHYJc+AUkTx5u+AAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "policy-as-code/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Mappings": {
  "ServiceprincipalMap": {
   "af-south-1": {
    "ssm": "ssm.af-south-1.amazonaws.com"
   },
   "ap-east-1": {
    "ssm": "ssm.ap-east-1.amazonaws.com"
   },
   "ap-northeast-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-northeast-2": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-northeast-3": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-south-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-southeast-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-southeast-2": {
    "ssm": "ssm.amazonaws.com"
   },
   "ap-southeast-3": {
    "ssm": "ssm.ap-southeast-3.amazonaws.com"
   },
   "ca-central-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "cn-north-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "cn-northwest-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "eu-central-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "eu-north-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "eu-south-1": {
    "ssm": "ssm.eu-south-1.amazonaws.com"
   },
   "eu-south-2": {
    "ssm": "ssm.eu-south-2.amazonaws.com"
   },
   "eu-west-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "eu-west-2": {
    "ssm": "ssm.amazonaws.com"
   },
   "eu-west-3": {
    "ssm": "ssm.amazonaws.com"
   },
   "me-south-1": {
    "ssm": "ssm.me-south-1.amazonaws.com"
   },
   "sa-east-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-east-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-east-2": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-gov-east-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-gov-west-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-iso-east-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-iso-west-1": {
    "ssm": "ssm.us-iso-west-1.amazonaws.com"
   },
   "us-isob-east-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-west-1": {
    "ssm": "ssm.amazonaws.com"
   },
   "us-west-2": {
    "ssm": "ssm.amazonaws.com"
   }
  }
 }
}